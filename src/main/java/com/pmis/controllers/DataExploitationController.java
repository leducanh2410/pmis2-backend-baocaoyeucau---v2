package com.pmis.controllers;

import com.pmis.constant.Constant;
import com.pmis.models.model.data_exploitation.CotDuLieu;
import com.pmis.payload.dto.CotDuLieuDTO;
import com.pmis.payload.response.data_exploitation.NhomDuLieuResponse;
import com.pmis.payload.response.service.ExecServiceResponse;
import com.pmis.services.service.DataExploitationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/api/dataExploitation")
@PreAuthorize("isAuthenticated()")
public class DataExploitationController {
    @Autowired
    private DataExploitationService dataExploitationService;

    @GetMapping("/{maDuLieu}")
    public ResponseEntity<ExecServiceResponse> getAllData(@PathVariable String maDuLieu) {
        try {
            List<Map<String, Object>> dataExploitation = dataExploitationService.getDataExploitation(maDuLieu, true, false);
            if (dataExploitation == null) {
                return ResponseEntity.ok(new ExecServiceResponse(0, "Lấy danh sách dữ liệu đã khai thác dữ liệu không thành công"));
            } else if (dataExploitationService.getRowsNum() > Constant.MAX_CHART_DATA_ROWS) {
                return ResponseEntity.ok(new ExecServiceResponse(0, "Số lượng bản ghi dữ liệu quá lớn, hệ thống không thể vẽ biểu đồ"));
            }
            NhomDuLieuResponse nhomDuLieuResponse = new NhomDuLieuResponse();
            nhomDuLieuResponse.setMaNhomDuLieu(maDuLieu);
            nhomDuLieuResponse.setData(dataExploitation);
            nhomDuLieuResponse.setRows(dataExploitationService.getCotDuLieus().stream().map(this::mapCotDuLieu));
            return ResponseEntity.ok(new ExecServiceResponse(nhomDuLieuResponse, 1, ""));
        } catch (Exception e) {
            e.printStackTrace();
            return ResponseEntity.ok(new ExecServiceResponse(0, "Lấy danh sách dữ liệu đã khai thác dữ liệu không thành công"));
        }
    }

    private CotDuLieuDTO mapCotDuLieu(CotDuLieu cotDuLieu) {
        return new CotDuLieuDTO(
                cotDuLieu.getMA_DULIEU_CTIET(),
                cotDuLieu.getMA_COT(),
                cotDuLieu.getSTT(),
                cotDuLieu.getTEN_COT(),
                cotDuLieu.getMO_TA(),
                cotDuLieu.getMA_KIEU_DLIEU(),
                cotDuLieu.getSORT(),
                cotDuLieu.getFORMAT(),
                cotDuLieu.getVIEW()
        );
    }
}
